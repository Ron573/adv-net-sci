---
title: "Small-World Networks: Core Concepts"
---

## What to learn in this module

In this module, we will learn small-world experiments and conduct a small small-world experiment . We will learn:

- Small-world experiment by Milgram
- Different concepts of *distance*: path, walks, circuits, cycles, connectedness
- How to measure a *distance* between two nodes
- **Keywords**: small-world experiment, six degrees of separation, path, walks, circuits, cycles, connectedness, connected component, weakly connected component, strongly connected component.

## Small-world experiment

::: {.column-margin}
[Stanley Milgram](https://en.wikipedia.org/wiki/Stanley_Milgram) (1933-1984) was an American social psychologist best known for his controversial [obedience experiments](https://en.wikipedia.org/wiki/Milgram_experiment) at Yale University in the early 1960s. Beyond the obedience studies, Milgram conducted groundbreaking research on social networks, including the famous ["small world" experiment](https://en.wikipedia.org/wiki/Small-world_experiment) that revealed the surprisingly short chains connecting any two people in society.
:::

How far are two people in a social network? Milgram and his colleagues conducted a series of expriment to find out in the 1960s.

::: {#fig-milgram-small-world-experiment}

<img src="../figs/milgram-small-world-experiment.png" width="70%">

Milgram's small world experiment.

:::


The experiment went as follows:

1. Milgram first sent out packets to randomly selected people in Omaha, Nebraska, and Wichita, Kansas.
2. The recipient was asked to send the packet to the target person in Boston if they knew them. If not, they were to forward it to someone they knew on a first-name basis who might know the target.
3. The recipient continued to forward the packet to their acquaintances until it reached the target.

The results were surprising: out of the 160 letters sent, 64 successfully reached the target person by the chain of nearly six people, which was later called **six degrees of separation**.
The results imply that, despite the fact that there were hundreds of millions of people in the United States, their social network was significantly compact, with two random people being connected to each other in only a few steps.

::: {.column-margin}
The term "Six degrees of separation" is commonly associated with Milgram's experiment, but Milgram never used it. John Guare coined the term for his 1991 play and movie ["Six Degrees of Separation."](https://en.wikipedia.org/wiki/Six_Degrees_of_Separation_(film))
:::

The results were later confirmed independently.

-  Yahoo research replicate the Milgram's experiment by using emails. Started from more than 24,000 people, only 384 people reached the one of the 18 target person in 13 countries. Among the successful ones, the average length of the chain was about 4. When taken into account the broken chain, the average length was estimated between 5 and 7. [@goel2009social]

- Researchers in Facebook and University of Milan analyzed the social network n Facebook, which consisted of 721 million active users and 69 billion friendships. The average length of the shortest chain was found to be 4.74. [@backstrom2012four]

## Wikirace: Experiencing Small-World Networks

Let us feel how small a large network can be by playing the [Wikirace](https://wiki-race.com) game.

<div align="center">
  <img src="https://cdn.sparkfun.com/assets/home_page_posts/3/8/8/0/Wikirace.jpeg" alt="Wikirace" width="70%">
</div>

At the end of the module, we will measure the average path length in a social network. Before jumping on, let us arm with some coding techniques to handle the network in the next two sections.

## Why is small-world networks non-trivial?


::: {.column-margin}

<iframe width="250" height="150" src="https://www.youtube.com/embed/TcxZSmzPw8k?si=J7DZ-7gmBPPruTSV" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>

:::

When we think about social networks, it's natural to imagine that most people are friends with others who are nearby—friends of friends, classmates, colleagues, or neighbors. These are **local connections**, and they tend to form tightly-knit groups where everyone knows each other. In network terms, this means there are many **triangles**: if Alice is friends with Bob, and Bob is friends with Carol, then Alice is also likely to be friends with Carol.

However, if a network only had these local, clustered connections, it would be difficult for information or influence to travel quickly across the entire network. You would have to go through many intermediaries to reach someone far away, resulting in a **large diameter** (the longest shortest path between any two nodes).

What makes **small-world networks** non-trivial and surprising is that, despite having lots of local clustering (many triangles), they also have a few **long-range connections**—edges that link distant parts of the network. These "shortcuts" dramatically reduce the average distance between nodes. As a result, even in a huge network, you can reach almost anyone in just a few steps. This combination of high clustering and short path lengths is what defines the small-world property.

In summary:

- **Local connections** create clustering (many triangles), but by themselves would make the network "large" in terms of path length.
- **Small-world networks** have both high clustering *and* short average path lengths, thanks to a few edges that connect distant parts of the network.
- This structure is non-trivial because it cannot be explained by local connections alone; the presence of long-range links is essential for the "small world" phenomenon.

## Local Clustering vs. Global Clustering

::: {.column-margin}

<iframe width="250" height="150" src="https://www.youtube.com/embed/mgcNO58BLk4?si=9wjqYyDzlMB0z6DH" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>

:::


Let us approach the small-world properties from mathematical angle. Two key characteristics of small-world networks are:

- **Short average path length**: You can reach distant parts of the network quickly.
- **High clustering**: Friends of friends are often friends.


**Short Average Path Length:**

::: {.column-margin}
A path is a walk without repeated nodes. The shortest paths are the paths with the smallest number of edges.
:::

Let's understand what **average path length** means by breaking it down step by step:

**Step 1: Understanding Distance Between Nodes**

When we talk about how "far apart" two nodes are in a network, we mean the shortest number of edges you need to traverse to get from one node to the other. This is called the **distance** between nodes.

```{dot}
//| fig-cap: "Simple network example for understanding shortest paths"
graph G {
  layout=neato
  A [pos="0,0!"]
  B [pos="2,0!"]
  C [pos="1,1.5!"]
  D [pos="3,1!"]
  
  A -- B;
  A -- C;
  B -- C;
  B -- D;
  C -- D;
}
```

**Step 2: Finding Shortest Paths**

In this simple network, let's find the distance between nodes A and D:
- **Path 1**: A → B → D (2 edges)
- **Path 2**: A → C → D (2 edges) 
- **Path 3**: A → C → B → D (3 edges)

Even though there are multiple paths, the **shortest path length** (distance) from A to D is **2 edges**.

**Step 3: Calculate All Pairwise Distances**

Now let's find the distance between every pair of nodes:
- A to B: 1 edge (A → B)
- A to C: 1 edge (A → C)
- A to D: 2 edges (A → B → D or A → C → D)
- B to C: 1 edge (B → C)
- B to D: 1 edge (B → D)
- C to D: 1 edge (C → D)

**Step 4: Calculate Average Path Length**

The **average path length** is simply the average of all these distances:

Total distances: 1 + 1 + 2 + 1 + 1 + 1 = 7
Number of node pairs: 6
Average path length = 7 ÷ 6 = **1.17**

This tells us that, on average, any two nodes in this network are about 1.17 edges apart.


**High clustering**
**Local Clustering:**

Local clustering measures how tightly connected a node's immediate neighbors are to each other. If you have a friend Alice, and Alice has friends Bob and Carol, local clustering asks: "Are Bob and Carol also friends with each other?" High local clustering means that your friends tend to know each other, creating dense local neighborhoods or cliques.

- **Mathematical definition**: For a node *i*, local clustering coefficient *C_i* is the fraction of possible triangles that actually exist among node *i* and its neighbors.
- **Range**: Local clustering coefficients range from 0 (no triangles) to 1 (all possible triangles exist).
- **Example**: In social networks, high local clustering reflects the fact that people in the same social circles (work, school, neighborhood) tend to know each other.

**Global Clustering:**

Global clustering, also known as **transitivity**, measures the overall tendency for triangles to form throughout the entire network. It answers the question: "Across the whole network, how likely is it that two nodes connected to a common neighbor are also connected to each other?"

- **Mathematical definition**: Global clustering coefficient is the ratio of the number of actual triangles to the number of possible triangles in the network.
- **Range**: Like local clustering, it ranges from 0 to 1.
- **Network-wide perspective**: Global clustering captures the overall "clumpiness" of connections across the entire network structure.

**Why This Distinction Matters for Small-World Networks:**

The key insight is that small-world networks exhibit **high local clustering** (friends of friends are often friends) while maintaining **short average path lengths** (you can reach distant parts of the network quickly). This combination seems contradictory:

- **High clustering** suggests a "clumpy" network where connections are mostly local, which should make distant nodes hard to reach.
- **Short path lengths** suggest efficient global connectivity, which typically requires more random, long-range connections.

Small-world networks resolve this apparent contradiction through a clever structure: they maintain dense local clusters while having just enough long-range "shortcut" connections to dramatically reduce distances. This is what makes them both highly clustered locally and globally efficient for information flow.

## Paths, Walks, and Network Connectivity

While we have already used the term **path**, let us make clear its definition, together with other related terms and concepts of network connectivity.

**Basic Definitions:**

- A **walk** is a sequence of nodes that are connected to form a continous route in a network. For instance, walk (0, 1, 2, 3) is a walk in the graph of the bridges of Konigsberg. But the sequence (0,2,3,1) is not a walk, because the node 0 is not directly connected to node 2.

- A **trail** is a walk with no repeated edge. For instance, walk (0, 1, 2, 3) is also a trail as it does not cross the same edge twice. But walk (0,2,3,1,3) is not a trail due to the repeated edge (1,3).

- A **path** is a walk without repeated node. For instance, walk (0,1,2,3) is a path. But walk (0, 1, 2, 1, 2, 3) is not a path due to the repeated node 1 and 2.

- When a walk starts and ends at the same node, it is called a **loop*. If the loop is a trail, it is called a **circuit**. If the loop is a path, it is called a **cycle**.

***Question***: Is a path always a trail, and is a trail always a path?

::: {#fig-numbered-koningsberg-graph2}

<img src= "../figs/labeled-koningsberg.jpg" width="30%">

Labeled Knigsberg graph

:::

**Shortest Paths:**

- **Shortest Path** is the path with the smallest number of edges (or nodes) between two nodes. A shortest path from node 0 to 2 is (0, 1, 2). Two nodes can have multiple shortest paths e.g., (0, 3, 2).
- **The shortest path length** is the number of edges in the shortest path, *not the number of nodes!* 👈👈

::: {.callout-note}
## Are there **shortest trails** and **shortest walks**?
Shortest trails and shortest walks are fundamentally equivalent to shortest paths. A shortest trail must visit each node only once (otherwise it would not be the shortest), and similarly, a shortest walk does not repeat nodes (otherwise it would not be the shortest), both forming a shortest path.
:::

## Network Connectivity

**Basic Connectivity Concepts:**

- A network is **connected** if there is a path between every pair of nodes.
- A network is **disconnected** if there is no path between some pairs of nodes.
- **A connected component** of a network is a set of nodes that are connected to each other.
- **The giant component** of a network is the largest connected component that contains a significant fraction of nodes in the network (in order of the number of nodes).

::: {#fig-connected-components}

<img src= "../figs/connected-component.jpg" width="50%">

connected components of a network. the nodes with the same color form a connected component.

:::

**Connectivity in Directed Networks:**

We call a network is *directed* if the edges have a direction. Example directed networks include the network of Web pages, the network of friendships on X, the network of citations on academic papers.

In a directed network, a walk must follow the edge directions. Paths, trails, and loops extend similarly to directed networks. But one thing to keep in mind: a walk may not be reversible, meaning there can be a walk from one node to another but not vice versa.

This leads to two different types of `connectedness` as follows:

- **Strong connectedness**: A directed network is said to be strongly connected if there is a path from every node to every other node.
- **Weak connectedness**: A directed network is said to be weakly connected if there is a path from every node to every other node on its *undirected* counterpart.

::: {#fig-connected-components-directed}

<img src= "../figs/connected-component-directed.jpg" width="50%">

connected components of a network. the nodes with the same color form a connected component.

:::

**Question**: Is a strongly-connected component always a weakly-connected component?

In the next section, we will learn how to compute the shortest paths and connected components of a network using a library [igraph](https://python.igraph.org/en/stable/).

## References

::: {#refs}
:::