{
  "hash": "f8f1d132a263b4b823036ad1d2fe3c73",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Node Degree: The Building Block of Network Analysis\"\njupyter: advnetsci\nexecute:\n    enabled: true\n---\n\n::: {.callout-note title=\"What you'll learn in this module\"}\nThis module introduces a single, powerful idea â€” the node's degree â€” and shows how that simple number reveals a network's structure and behavior.\n\nYou'll learn:\n\n- What **degree** and **degree distribution** mean and how to read them.\n- How to **visualize** degree distributions so underlying patterns become clear.\n- The counterintuitive **Friendship Paradox** and the notion of **degree bias**.\n- Practical consequences for network robustness, spreading processes, and targeted interventions.\n:::\n\n## Node degree\n\nLet's talk about node degree. A node's degree is the number of edges touching it. Here we focus on why that simple count matters.\n\nAt the level of an individual node, degree measures visibility and influence: high-degree nodes see and can spread information (or infection) quickly; low-degree nodes have limited reach. At the level of a network, the collection of degrees reveals how centralized or evenly distributed connectivity is â€” and that shape drives many collective behaviors.\n\n\n```{dot}\n//| fig-width: 3\n//| fig-height: 3\n//| fig-cap: \"A small example graph â€” node degrees are shown as labels\"\n//| label: fig-degree-dot\n//| fig-align: center\ngraph G {\n  layout=fdp;\n  sep=1.5;\n  A [label=\"A (3)\", shape=circle, style=filled, fillcolor=\"#f5cbcc\"];\n  B [label=\"B (1)\", shape=circle];\n  C [label=\"C (1)\", shape=circle];\n  D [label=\"D (1)\", shape=circle];\n  A -- B;\n  A -- C;\n  A -- D;\n}\n```\n\nThe tiny graph above makes the point visually: node A has degree 3 (it connects to three nodes) while B, C, and D each have degree 1. That asymmetry â€” a mix of hubs and leaves â€” is common in real networks and underlies many of the phenomena we study.\n\n\n### Degree distribution\n\nShift your attention from single nodes to the whole network by asking: how common is each degree? The **degree distribution** answers that question â€” it lists the fraction of nodes with degree 1, degree 2, degree 3, and so on. Reading this distribution quickly tells you whether connectivity is evenly spread or concentrated in a few nodes.\n\nWhy does that summary matter in practice? Because the distribution shapes how networks behave. We have already seen this in the previous modules:\n\n- Robustness vs. fragility â€” Networks with heavy-tailed degree distributions tolerate random node loss (most removals hit low-degree nodes) but are fragile to targeted hub removal, which can fragment the network.\n\n- Small-world effects â€” If a few hubs dominate the degree distribution, they act as shortcuts that dramatically reduce distances between nodes.\n\nWe will add an additional interesting example, called the **Friendship Paradox**, in the next section.\n\n## The Friendship Paradox\n\nThe **Friendship Paradox** (Scott Feld, 1991) states that *your friends have more friends than you do on average*. This is not an insult â€” it is a statistical consequence of how connections are counted in most social networks. This counterintuitive phenomenon emerges from the mathematical properties of networks and has profound implications for how we understand social structures, information flow, and even public health interventions.\n\n\n::: {.column-margin}\n<iframe width=\"250\" height=\"150\" src=\"https://www.youtube.com/embed/sF1wy6OkeLE?si=MQByrdpTwQG4Mwh-\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen></iframe>\n:::\n\nAt its core, the Friendship Paradox reveals a fundamental asymmetry in social networks: high-degree nodes (popular individuals) are more likely to be counted as friends by others, while low-degree nodes are less likely to be referenced. This creates a sampling bias where the average degree of your friends tends to be higher than your own degree, and indeed higher than the average degree of the entire network.\n\n```{dot}\n//| fig-width: 4\n//| fig-height: 3\n//| fig-cap: \"Friendship paradox example â€” node labels show degrees\"\n//| label: fig-friendship-dot\ngraph G {\n  layout=neato\n  Alex  [label=\"Alex\\n(1)\",  shape=circle, style=filled, fillcolor=\"#f5cbcc\"];\n  Bob   [label=\"Bob\\n(3)\",   shape=circle, style=filled, fillcolor=\"#ffd9a6\"];\n  Carol [label=\"Carol\\n(1)\", shape=circle];\n  David [label=\"David\\n(1)\", shape=circle];\n  Alex -- Bob;\n  Carol -- Bob;\n  David -- Bob;\n}\n```\n\nThe network diagram above illustrates the Friendship Paradox with a simple four-node network.\nThe average degree in this network is (1+3+1+1)/4 = 1.5, but when we look at the average degree of each person's friends, we get a different story.\n\nLet us list all the friendship ties in adjacency list format, along with the degree of each node in parentheses:\n\n- Bob: Alex (1), Carol (1), David (1)\n- Alex: Bob (3)\n- Carol: Bob (3)\n- David: Bob (3)\n\nNow, let's compute the average degree of a friend.\n\n$$\n\\frac{\\overbrace{1 + 1 + 1}^{\\text{Bob's friends}} + \\overbrace{3 + 3 + 3}^{\\text{The friends of Alex, Carol, and David}}}{\\underbrace{6}_{\\text{\\# of friends}}} = 2\n$$\n\nwhich confirms the friendship paradox, i.e., a someone's friend tends to have more friends than that someone.\n\nWhy this produces the paradox? Notice that high-degree nodes like Bob are referenced multiple times when computing the average degree of a friend. This is because Bob are a friend of many friends! On the other hand, low-degree nodes are referenced less often.\nThis bias towards high-degree nodes is what makes the friendship paradox a paradox.\n\nBeyond a fun trivia, the friendship paradox has practical implications. In social networks, most people will find that their friends have more friends than they do, not because they're unpopular, but because of this statistical bias. The same principle applies to many other networks: in scientific collaboration networks, your coauthors tend to have more collaborators than you do; in the internet, the websites you link to tend to have more incoming links than your website.\n\n::: {.callout-tip title=\"Try it yourself\"}\n- **Challenge**: Can you build a network where your friends always have *more* friends than you? Test ideas with this interactive [Friendship Paradox Game ðŸŽ®](../assets/vis/friendship-paradox-game.html).\n:::\n\n### The friendship paradox in public health\n\nThis observation has profound practical consequences, especially in public health and epidemiology. To slow an epidemic you can use the friendship paradox to find better targets, called **acquaintance immunization** [@cohen2003efficient], which goes as follows:\n\n1. Pick a random sample of individuals.\n2. Ask each to nominate one friend.\n3. Vaccinate the nominated friends (who tend to be better connected).\n\nThis works because when people nominate a friend, they're more likely to name someone with many social connections. By targeting these nominated friends, public health officials can reach the most connected individuals in a network without needing to map the entire social structure.\n\n::: {.column-margin}\n\nThe acquaintance immunization does not require the knowledge of the entire network structure, which makes it a practical and effective way to slow an epidemic.\n\n:::\n\n::: {.callout-note title=\"Put the idea to the test\"}\n**Challenge**: Can you control an outbreak by vaccinating people chosen via the friendship paradox? Try to outperform random vaccination in this [Vaccination Game ðŸŽ®](../assets/vis/vaccination-game.html).\n:::\n\n\n## Visualizing degree distributions\n\nThe very first step to understand degree distribution is to visualize it. But visualizing degree distribution is not as simple as it seems. Take for example, the following histogram of a degree distribution.\n\n::: {#cell-fig-linear-hist .cell fig-height='4' fig-width='6' execution_count=1}\n\n::: {.cell-output .cell-output-stdout}\n```\nCalculating best minimal value for power law fit\nxmin progress: 00%\rxmin progress: 05%\rxmin progress: 10%\rxmin progress: 15%\rxmin progress: 20%\rxmin progress: 25%\rxmin progress: 30%\rxmin progress: 35%\rxmin progress: 40%\rxmin progress: 45%\rxmin progress: 50%\rxmin progress: 55%\rxmin progress: 60%\rxmin progress: 65%\rxmin progress: 70%\rxmin progress: 75%\rxmin progress: 80%\rxmin progress: 85%\rxmin progress: 90%\rxmin progress: 95%\r\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![A histogram of a scale-free degree distribution on a linear scale. It's nearly impossible to see the structure of the tail.](01-concepts_files/figure-html/fig-linear-hist-output-2.png){#fig-linear-hist fig-align='center'}\n:::\n:::\n\n\nThis is a plot you would often see for a real-world network. Most nodes have a very small degree, so they are all crammed into the first few bins on the left. The long tail of high-degree nodes---which hold most edges in the network---is invisible because there are very few of them. This is a **fat-tailed distribution**, which is a common characteristics of real-world networks.\n\nTo solve this, we can plot the same histogram but with both axes on a logarithmic scale. This is called a **logâ€“log plot**.\n\n::: {#cell-fig-loglog-hist .cell fig-height='4' fig-width='6' execution_count=2}\n\n::: {.cell-output .cell-output-display}\n![The same degree histogram on a log-log scale. The structure becomes much clearer, revealing a roughly linear relationship.](01-concepts_files/figure-html/fig-loglog-hist-output-1.png){#fig-loglog-hist fig-align='center'}\n:::\n:::\n\n\nA logâ€“log plot (@fig-loglog-hist) makes both low- and high-degree nodes visible, revealing heavy-tailed patterns. If the tail is roughly linear, it suggests a power-law degree distribution: the probability a node has degree $k$ falls off as $k^{-\\gamma}$. The slope of the line shows how quickly high-degree nodes become rare. A steeper slope (higher $\\gamma$) means fewer hubs; a shallower slope means more.\nInterestingly, many real-world networks exhibit power-law(-like) degree distributions, whether they are biological, technical, or social. This universality of power-law degree distributions is one of the foundational insights of Network Science.\n\n::: {.column-margin}\n\nBarabÃ¡si and Albert (1999) [@barabasi1999emergence] reported the universality of power-law degree distribution in real-world networks. They proposed a mechanism of the emergence of power-law degree distribution, called preferential attachment, which is a subject of a separate module.\n\nWhether power-law degree distribution is a good model for real-world networks is a topic of debate  [@artico2020rare] [@holme2019rare] [@voitalov2019scale] [@broido2019scale]. A straight line on a log-log plot is not a unique signature of power-law degree distribution. One can construct it by a mixture of poisson distributions, or some other distributions. Testing whether a network is a power-law or not requires statistical assessment going beyond the visual inspection.\n\n:::\n\nThe log-log plot above shows *probability density function* (PDF) of the degree distribution. It is defined as the fraction of nodes with degree exactly $k$.\n\n$$\np(k) = \\frac{\\text{number of nodes with degree } k}{N}\n$$\n\nwhere $N$ is the total number of nodes in the network.\n\nThe PDF is useful but often noisy, especially in the tail where there are few observations. A better, more stable choice is the *complementary cumulative distribution function* (CCDF), which is useful for plotting heavy-tailed distributions.\n\n::: {.column-margin}\nFor a visual comparison of CCDF and PDF, see Figure 3 in [@newman2005power]\n:::\n\n$$\n\\text{CCDF}(k) = P(k' > k) = \\sum_{k'=k+1}^\\infty p(k')\n$$\n\nCCDF represents the fraction of nodes with degree greater than $k$, or equivalently, the fraction of nodes that survive the degree cutoff $k$. It is also known as the *survival function* of the degree distribution.\n\n::: {#cell-fig-ccdf-hist .cell fig-height='4' fig-width='6' execution_count=3}\n\n::: {.cell-output .cell-output-display}\n![The CCDF of the degree distribution on a log-log scale.](01-concepts_files/figure-html/fig-ccdf-hist-output-1.png){#fig-ccdf-hist fig-align='center'}\n:::\n:::\n\n\nA nice feature of the CCDF compared to the PDF is that it does not require any binning of the data. When calculating the PDF, we need to bin the data into a finite number of bins, which is subject to the choice of bin size. CCDF does not require any binning of the data.\n\n::: {.column-margin}\n\n\nThere is a related function called the *cumulative distribution function* (CDF), which is the fraction of nodes with degree less than or equal to $k$, i.e., $1 - \\text{CCDF}(k)$.\n\nFor degree-heterogenous networks, the CCDF is preferred over the CDF because the CDF does not show the tail of the distribution clearly.\n\n::: {#cell-fig-cdf-hist .cell fig-height='4' fig-width='4' execution_count=4}\n\n::: {.cell-output .cell-output-display}\n![The CDF of the degree distribution on a log-log scale.](01-concepts_files/figure-html/fig-cdf-hist-output-1.png){#fig-cdf-hist fig-align='center'}\n:::\n:::\n\n\n:::\n\n### Interpreting the CCDF for Power-Law Distributions\n\nFor networks whose degree distribution follows a power law, the CCDF offers a direct path to estimating the power-law exponent, $\\gamma$. Let's walk through the derivation to see how.\n\nA continuous power-law distribution is defined by the probability density function (PDF):\n$$\np(k) = Ck^{-\\gamma}\n$$\nwhere $C$ is a normalization constant ensuring the total probability is 1.\n\nThe CCDF, which we denote as $P(k)$, is the probability that a node's degree $k'$ is greater than some value $k$. We calculate this by integrating the PDF from $k$ to infinity:\n$$\nP(k) = \\int_{k}^{\\infty} p(k') dk' = \\int_{k}^{\\infty} Ck'^{-\\gamma} dk'\n$$\nPerforming the integration gives us:\n$$\nP(k) = C \\left[ \\frac{k'^{-\\gamma+1}}{-\\gamma+1} \\right]_{k}^{\\infty}\n$$\nAssuming $\\gamma > 1$, which is typical for real-world networks, the term $k'^{-\\gamma+1}$ approaches zero as $k'$ approaches infinity. The expression simplifies to:\n$$\nP(k) = -C \\left( \\frac{k^{-\\gamma+1}}{-\\gamma+1} \\right) = \\frac{C}{\\gamma-1} k^{-(\\gamma-1)}\n$$\nThis result shows that the CCDF itself follows a power law, $P(k) \\propto k^{-(\\gamma-1)}$.\n\nTo see what this means for a log-log plot, we take the logarithm of both sides:\n$$\n\\log P(k) = \\log\\left(\\frac{C}{\\gamma-1}\\right) - (\\gamma-1)\\log(k)\n$$\nThis equation is in the form of a straight line, $y = b + mx$, where:\n\n- $y = \\log P(k)$\n- $x = \\log(k)$\n- The y-intercept $b = \\log\\left(\\frac{C}{\\gamma-1}\\right)$\n- The slope $m = -(\\gamma-1) = 1-\\gamma$\n\n::: {.callout-important title=\"Key Relationship\"}\n**For a power-law distribution, the slope of the CCDF on a log-log plot is $1 - \\gamma$.**\n\nThis is a crucial point for accurately estimating the scaling exponent from empirical data. For example, if you measure the slope of the CCDF plot to be -1.3, the estimated power-law exponent $\\gamma$ is $2.3$, not $1.3$ (since $-1.3 = 1 - 2.3$).\n:::\n\n",
    "supporting": [
      "01-concepts_files/figure-html"
    ],
    "filters": [],
    "includes": {}
  }
}