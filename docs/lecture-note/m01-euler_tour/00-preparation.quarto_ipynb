{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: From Visual to Computational Thinking\n",
        "filters:\n",
        "  - marimo-team/marimo\n",
        "  - tikz\n",
        "tikz:\n",
        "  cache: false\n",
        "  save-tex: true  # Enable saving intermediate .tex files\n",
        "  tex-dir: tikz-tex  # Optional: Specify directory to save .tex files\n",
        "jupyter: python3\n",
        "---\n",
        "\n",
        "## The Bridge Between Mathematics and Computation\n",
        "\n",
        "In 1736, the residents of Königsberg (now Kaliningrad) faced a peculiar puzzle: could one walk through their city, crossing each of its seven bridges exactly once and return to the starting point? This seemingly simple question would launch an entirely new branch of mathematics.\n",
        "\n",
        "::: {.column-margin}\n",
        "Königsberg was the capital of Prussia and home to the famous philosopher Immanuel Kant. The city was built around the Pregel River and its two large islands.\n",
        ":::\n",
        "\n",
        "Leonhard Euler, the Swiss mathematician, proved this walk was impossible by abstracting the physical bridges into mathematical objects. He reduced the complex geography to its essential structure: ***nodes*** (landmasses) connected by ***edges*** (bridges). This abstraction—ignoring irrelevant details like bridge length or island size—became the foundation of graph theory.\n",
        "\n",
        "::: {.column-margin}\n",
        "Euler was one of the most prolific mathematicians in history, contributing to nearly every area of mathematics. He lost sight in his right eye in 1738 but continued his work, producing almost half of his total output after becoming completely blind in 1766.\n",
        ":::\n",
        "\n",
        "Today, we face the same challenge Euler did: how do we translate visual, intuitive understanding into computational analysis? The difference is that where Euler worked with seven bridges, we now work with networks containing millions or billions of connections.\n",
        "\n",
        "## From Visual to Computational Thinking\n",
        "\n",
        "The key insight Euler discovered was that for the Königsberg bridge problem, the physical details didn't matter. What mattered was the abstract structure: which landmasses connected to which other landmasses.\n",
        "\n",
        "This same principle guides how we represent networks computationally today:\n",
        "\n",
        "1. **Abstract the essence**: Focus on connectivity, not physical details\n",
        "2. **Use appropriate representations**: Choose data structures that enable efficient computation\n",
        "3. **Preserve mathematical properties**: Ensure our representations capture the structural insights we need\n",
        "\n",
        "::: {.column-margin}\n",
        "This is not just history—Euler's approach of abstracting complex systems into nodes and edges is the same method we use today to analyze internet routing, brain connectivity, and viral spread patterns.\n",
        ":::\n",
        "\n",
        "Consider a simple network with 5 nodes and 6 edges. While we can visualize it as dots and lines, we need computational representations to analyze large networks efficiently. The art lies in choosing representations that both capture the network's essential structure and enable efficient algorithms.\n",
        "\n",
        "## What's Next?\n",
        "\n",
        "Now that you understand the conceptual foundation, we'll explore:\n",
        "\n",
        "- **Concepts**: The mathematical principles behind Euler's solution and how they apply to modern networks\n",
        "- **Coding**: How to implement these ideas computationally using Python\n",
        "- **Exercises**: Hands-on practice with real network analysis\n",
        "\n",
        "Each builds on Euler's fundamental insight: that abstract mathematical thinking can solve concrete problems by focusing on essential structure rather than irrelevant details."
      ],
      "id": "005872bc"
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3 (ipykernel)",
      "path": "/Users/skojaku-admin/miniforge3/envs/advnetsci/share/jupyter/kernels/python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}