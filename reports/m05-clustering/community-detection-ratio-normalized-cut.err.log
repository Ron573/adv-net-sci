Traceback (most recent call last):
  File "/Users/skojaku-admin/miniforge3/envs/advnetsci/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/skojaku-admin/miniforge3/envs/advnetsci/lib/python3.11/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/skojaku-admin/miniforge3/envs/advnetsci/lib/python3.11/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/skojaku-admin/miniforge3/envs/advnetsci/lib/python3.11/asyncio/base_events.py", line 650, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/Users/skojaku-admin/miniforge3/envs/advnetsci/lib/python3.11/contextlib.py", line 222, in __aexit__
    await self.gen.athrow(typ, value, traceback)
  File "/Users/skojaku-admin/miniforge3/envs/advnetsci/lib/python3.11/site-packages/nbclient/client.py", line 650, in async_setup_kernel
    yield
  File "/Users/skojaku-admin/miniforge3/envs/advnetsci/lib/python3.11/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/Users/skojaku-admin/miniforge3/envs/advnetsci/lib/python3.11/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/skojaku-admin/miniforge3/envs/advnetsci/lib/python3.11/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import igraph as ig
import matplotlib.pyplot as plt

# Create two cliques of size 5
G1 = ig.Graph.Full(5)
G2 = ig.Graph.Full(5)

# Combine the two cliques
G = G1 + G2

# Add an edge between the two cliques
G.add_edge(0, 5)

# Draw the graph
layout = G.layout_fruchterman_reingold()

# Set up the plot
fig, ax = plt.subplots(figsize=(5, 5))

# Draw the connecting edge in red
ig.plot(
    G,
    target=ax,
    layout=layout,
    vertex_color='lightblue',
    vertex_size=20,
    edge_color='gray',
    edge_width=1
)

# Draw the connecting edge in red behind the graph
ax.plot([layout[0][0], layout[5][0]], [layout[0][1], layout[5][1]], color='red', linewidth=2, zorder=0)

ig.plot(
    G,
    target=ax,
    layout=layout,
    vertex_color='white',
    vertex_size=20,
    edge_color='k',
    edge_width=1
)

# Add labels to the nodes
for i, coords in enumerate(layout):
    ax.annotate(str(i), coords, ha='center', va='center')

plt.title("Two Cliques Connected by One Edge")
plt.axis('off')
plt.tight_layout()
plt.show()
------------------

----- stdout -----
Error in callback <function _draw_all_if_interactive at 0x129a7dbc0> (for post_execute), with arguments args (),kwargs {}:
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mAttributeError[0m                            Traceback (most recent call last)
File [0;32m~/miniforge3/envs/advnetsci/lib/python3.11/site-packages/IPython/core/formatters.py:343[0m, in [0;36mBaseFormatter.__call__[0;34m(self, obj)[0m
[1;32m    341[0m     [38;5;28;01mpass[39;00m
[1;32m    342[0m [38;5;28;01melse[39;00m:
[0;32m--> 343[0m     [38;5;28;01mreturn[39;00m printer(obj)
[1;32m    344[0m [38;5;66;03m# Finally look for special method names[39;00m
[1;32m    345[0m method [38;5;241m=[39m get_real_method(obj, [38;5;28mself[39m[38;5;241m.[39mprint_method)

File [0;32m~/miniforge3/envs/advnetsci/lib/python3.11/site-packages/IPython/core/pylabtools.py:170[0m, in [0;36mprint_figure[0;34m(fig, fmt, bbox_inches, base64, **kwargs)[0m
[1;32m    167[0m     [38;5;28;01mfrom[39;00m [38;5;21;01mmatplotlib[39;00m[38;5;21;01m.[39;00m[38;5;21;01mbackend_bases[39;00m [38;5;28;01mimport[39;00m FigureCanvasBase
[1;32m    168[0m     FigureCanvasBase(fig)
[0;32m--> 170[0m fig[38;5;241m.[39mcanvas[38;5;241m.[39mprint_figure(bytes_io, [38;5;241m*[39m[38;5;241m*[39mkw)
[1;32m    171[0m data [38;5;241m=[39m bytes_io[38;5;241m.[39mgetvalue()
[1;32m    172[0m [38;5;28;01mif[39;00m fmt [38;5;241m==[39m [38;5;124m'[39m[38;5;124msvg[39m[38;5;124m'[39m:

File [0;32m~/miniforge3/envs/advnetsci/lib/python3.11/site-packages/matplotlib/backend_bases.py:2164[0m, in [0;36mFigureCanvasBase.print_figure[0;34m(self, filename, dpi, facecolor, edgecolor, orientation, format, bbox_inches, pad_inches, bbox_extra_artists, backend, **kwargs)[0m
[1;32m   2161[0m     [38;5;66;03m# we do this instead of `self.figure.draw_without_rendering`[39;00m
[1;32m   2162[0m     [38;5;66;03m# so that we can inject the orientation[39;00m
[1;32m   2163[0m     [38;5;28;01mwith[39;00m [38;5;28mgetattr[39m(renderer, [38;5;124m"[39m[38;5;124m_draw_disabled[39m[38;5;124m"[39m, nullcontext)():
[0;32m-> 2164[0m         [38;5;28mself[39m[38;5;241m.[39mfigure[38;5;241m.[39mdraw(renderer)
[1;32m   2165[0m [38;5;28;01mif[39;00m bbox_inches:
[1;32m   2166[0m     [38;5;28;01mif[39;00m bbox_inches [38;5;241m==[39m [38;5;124m"[39m[38;5;124mtight[39m[38;5;124m"[39m:

File [0;32m~/miniforge3/envs/advnetsci/lib/python3.11/site-packages/matplotlib/artist.py:95[0m, in [0;36m_finalize_rasterization.<locals>.draw_wrapper[0;34m(artist, renderer, *args, **kwargs)[0m
[1;32m     93[0m [38;5;129m@wraps[39m(draw)
[1;32m     94[0m [38;5;28;01mdef[39;00m [38;5;21mdraw_wrapper[39m(artist, renderer, [38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkwargs):
[0;32m---> 95[0m     result [38;5;241m=[39m draw(artist, renderer, [38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkwargs)
[1;32m     96[0m     [38;5;28;01mif[39;00m renderer[38;5;241m.[39m_rasterizing:
[1;32m     97[0m         renderer[38;5;241m.[39mstop_rasterizing()

File [0;32m~/miniforge3/envs/advnetsci/lib/python3.11/site-packages/matplotlib/artist.py:72[0m, in [0;36mallow_rasterization.<locals>.draw_wrapper[0;34m(artist, renderer)[0m
[1;32m     69[0m     [38;5;28;01mif[39;00m artist[38;5;241m.[39mget_agg_filter() [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[1;32m     70[0m         renderer[38;5;241m.[39mstart_filter()
[0;32m---> 72[0m     [38;5;28;01mreturn[39;00m draw(artist, renderer)
[1;32m     73[0m [38;5;28;01mfinally[39;00m:
[1;32m     74[0m     [38;5;28;01mif[39;00m artist[38;5;241m.[39mget_agg_filter() [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:

File [0;32m~/miniforge3/envs/advnetsci/lib/python3.11/site-packages/matplotlib/figure.py:3154[0m, in [0;36mFigure.draw[0;34m(self, renderer)[0m
[1;32m   3151[0m         [38;5;66;03m# ValueError can occur when resizing a window.[39;00m
[1;32m   3153[0m [38;5;28mself[39m[38;5;241m.[39mpatch[38;5;241m.[39mdraw(renderer)
[0;32m-> 3154[0m mimage[38;5;241m.[39m_draw_list_compositing_images(
[1;32m   3155[0m     renderer, [38;5;28mself[39m, artists, [38;5;28mself[39m[38;5;241m.[39msuppressComposite)
[1;32m   3157[0m [38;5;28;01mfor[39;00m sfig [38;5;129;01min[39;00m [38;5;28mself[39m[38;5;241m.[39msubfigs:
[1;32m   3158[0m     sfig[38;5;241m.[39mdraw(renderer)

File [0;32m~/miniforge3/envs/advnetsci/lib/python3.11/site-packages/matplotlib/image.py:132[0m, in [0;36m_draw_list_compositing_images[0;34m(renderer, parent, artists, suppress_composite)[0m
[1;32m    130[0m [38;5;28;01mif[39;00m not_composite [38;5;129;01mor[39;00m [38;5;129;01mnot[39;00m has_images:
[1;32m    131[0m     [38;5;28;01mfor[39;00m a [38;5;129;01min[39;00m artists:
[0;32m--> 132[0m         a[38;5;241m.[39mdraw(renderer)
[1;32m    133[0m [38;5;28;01melse[39;00m:
[1;32m    134[0m     [38;5;66;03m# Composite any adjacent images together[39;00m
[1;32m    135[0m     image_group [38;5;241m=[39m []

File [0;32m~/miniforge3/envs/advnetsci/lib/python3.11/site-packages/matplotlib/artist.py:72[0m, in [0;36mallow_rasterization.<locals>.draw_wrapper[0;34m(artist, renderer)[0m
[1;32m     69[0m     [38;5;28;01mif[39;00m artist[38;5;241m.[39mget_agg_filter() [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[1;32m     70[0m         renderer[38;5;241m.[39mstart_filter()
[0;32m---> 72[0m     [38;5;28;01mreturn[39;00m draw(artist, renderer)
[1;32m     73[0m [38;5;28;01mfinally[39;00m:
[1;32m     74[0m     [38;5;28;01mif[39;00m artist[38;5;241m.[39mget_agg_filter() [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:

File [0;32m~/miniforge3/envs/advnetsci/lib/python3.11/site-packages/matplotlib/axes/_base.py:3070[0m, in [0;36m_AxesBase.draw[0;34m(self, renderer)[0m
[1;32m   3067[0m [38;5;28;01mif[39;00m artists_rasterized:
[1;32m   3068[0m     _draw_rasterized([38;5;28mself[39m[38;5;241m.[39mfigure, artists_rasterized, renderer)
[0;32m-> 3070[0m mimage[38;5;241m.[39m_draw_list_compositing_images(
[1;32m   3071[0m     renderer, [38;5;28mself[39m, artists, [38;5;28mself[39m[38;5;241m.[39mfigure[38;5;241m.[39msuppressComposite)
[1;32m   3073[0m renderer[38;5;241m.[39mclose_group([38;5;124m'[39m[38;5;124maxes[39m[38;5;124m'[39m)
[1;32m   3074[0m [38;5;28mself[39m[38;5;241m.[39mstale [38;5;241m=[39m [38;5;28;01mFalse[39;00m

File [0;32m~/miniforge3/envs/advnetsci/lib/python3.11/site-packages/matplotlib/image.py:132[0m, in [0;36m_draw_list_compositing_images[0;34m(renderer, parent, artists, suppress_composite)[0m
[1;32m    130[0m [38;5;28;01mif[39;00m not_composite [38;5;129;01mor[39;00m [38;5;129;01mnot[39;00m has_images:
[1;32m    131[0m     [38;5;28;01mfor[39;00m a [38;5;129;01min[39;00m artists:
[0;32m--> 132[0m         a[38;5;241m.[39mdraw(renderer)
[1;32m    133[0m [38;5;28;01melse[39;00m:
[1;32m    134[0m     [38;5;66;03m# Composite any adjacent images together[39;00m
[1;32m    135[0m     image_group [38;5;241m=[39m []

File [0;32m~/miniforge3/envs/advnetsci/lib/python3.11/site-packages/matplotlib/artist.py:39[0m, in [0;36m_prevent_rasterization.<locals>.draw_wrapper[0;34m(artist, renderer, *args, **kwargs)[0m
[1;32m     36[0m     renderer[38;5;241m.[39mstop_rasterizing()
[1;32m     37[0m     renderer[38;5;241m.[39m_rasterizing [38;5;241m=[39m [38;5;28;01mFalse[39;00m
[0;32m---> 39[0m [38;5;28;01mreturn[39;00m draw(artist, renderer, [38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkwargs)

File [0;32m~/miniforge3/envs/advnetsci/lib/python3.11/site-packages/igraph/drawing/matplotlib/graph.py:48[0m, in [0;36m_stale_wrapper.<locals>.inner[0;34m(self, *args, **kwargs)[0m
[1;32m     45[0m [38;5;129m@wraps[39m(func)
[1;32m     46[0m [38;5;28;01mdef[39;00m [38;5;21minner[39m([38;5;28mself[39m, [38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkwargs):
[1;32m     47[0m     [38;5;28;01mtry[39;00m:
[0;32m---> 48[0m         func([38;5;28mself[39m, [38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkwargs)
[1;32m     49[0m     [38;5;28;01mfinally[39;00m:
[1;32m     50[0m         [38;5;28mself[39m[38;5;241m.[39mstale [38;5;241m=[39m [38;5;28;01mFalse[39;00m

File [0;32m~/miniforge3/envs/advnetsci/lib/python3.11/site-packages/igraph/drawing/matplotlib/graph.py:713[0m, in [0;36mGraphArtist.draw[0;34m(self, renderer, *args, **kwds)[0m
[1;32m    710[0m     [38;5;28;01mreturn[39;00m
[1;32m    712[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m [38;5;28mself[39m[38;5;241m.[39mget_children():
[0;32m--> 713[0m     [38;5;28mself[39m[38;5;241m.[39m_reprocess()
[1;32m    715[0m [38;5;66;03m# NOTE: looks like we have to manage the zorder ourselves[39;00m
[1;32m    716[0m children [38;5;241m=[39m [38;5;28mlist[39m([38;5;28mself[39m[38;5;241m.[39mget_children())

File [0;32m~/miniforge3/envs/advnetsci/lib/python3.11/site-packages/igraph/drawing/matplotlib/graph.py:621[0m, in [0;36mGraphArtist._reprocess[0;34m(self)[0m
[1;32m    617[0m     [38;5;28mself[39m[38;5;241m.[39m_vertex_builder [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_vertex_drawer[38;5;241m.[39mVisualVertexBuilder(
[1;32m    618[0m         graph[38;5;241m.[39mvs, kwds
[1;32m    619[0m     )
[1;32m    620[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m [38;5;28mhasattr[39m([38;5;28mself[39m, [38;5;124m"[39m[38;5;124m_edge_builder[39m[38;5;124m"[39m):
[0;32m--> 621[0m     [38;5;28mself[39m[38;5;241m.[39m_edge_builder [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_edge_drawer[38;5;241m.[39mVisualEdgeBuilder(graph[38;5;241m.[39mes, kwds)
[1;32m    623[0m [38;5;66;03m# Determine the order in which we will draw the vertices and edges[39;00m
[1;32m    624[0m [38;5;66;03m# These methods come from AbstractGraphDrawer[39;00m
[1;32m    625[0m [38;5;28mself[39m[38;5;241m.[39m_vertex_order [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_determine_vertex_order(graph, kwds)

File [0;32m~/miniforge3/envs/advnetsci/lib/python3.11/site-packages/igraph/drawing/metamagic.py:219[0m, in [0;36mAttributeCollectorBase.__init__[0;34m(self, seq, kwds)[0m
[1;32m    216[0m [38;5;28mself[39m[38;5;241m.[39mkwds [38;5;241m=[39m kwds [38;5;129;01mor[39;00m {}
[1;32m    218[0m [38;5;28;01mfor[39;00m attr_spec [38;5;129;01min[39;00m [38;5;28mself[39m[38;5;241m.[39m_attributes:
[0;32m--> 219[0m     values [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_collect_attributes(attr_spec)
[1;32m    220[0m     attr_name [38;5;241m=[39m attr_spec[38;5;241m.[39mname
[1;32m    221[0m     [38;5;28;01mfor[39;00m cache_elt, val [38;5;129;01min[39;00m [38;5;28mzip[39m([38;5;28mself[39m[38;5;241m.[39m_cache, values):

File [0;32m~/miniforge3/envs/advnetsci/lib/python3.11/site-packages/igraph/drawing/metamagic.py:336[0m, in [0;36mAttributeCollectorBase._collect_attributes[0;34m(self, attr_spec, config)[0m
[1;32m    334[0m [38;5;28;01mif[39;00m attr_spec[38;5;241m.[39mtransform [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[1;32m    335[0m     transform [38;5;241m=[39m attr_spec[38;5;241m.[39mtransform
[0;32m--> 336[0m     result [38;5;241m=[39m [transform(x) [38;5;28;01mfor[39;00m x [38;5;129;01min[39;00m result]
[1;32m    338[0m [38;5;28;01mreturn[39;00m result

File [0;32m~/miniforge3/envs/advnetsci/lib/python3.11/site-packages/igraph/drawing/metamagic.py:336[0m, in [0;36m<listcomp>[0;34m(.0)[0m
[1;32m    334[0m [38;5;28;01mif[39;00m attr_spec[38;5;241m.[39mtransform [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[1;32m    335[0m     transform [38;5;241m=[39m attr_spec[38;5;241m.[39mtransform
[0;32m--> 336[0m     result [38;5;241m=[39m [transform(x) [38;5;28;01mfor[39;00m x [38;5;129;01min[39;00m result]
[1;32m    338[0m [38;5;28;01mreturn[39;00m result

File [0;32m~/miniforge3/envs/advnetsci/lib/python3.11/site-packages/igraph/drawing/colors.py:88[0m, in [0;36mPalette.get[0;34m(self, v)[0m
[1;32m     86[0m     [38;5;28;01mpass[39;00m
[1;32m     87[0m [38;5;28;01mif[39;00m [38;5;28misinstance[39m(v, [38;5;28mstr[39m):
[0;32m---> 88[0m     result [38;5;241m=[39m color_name_to_rgba(v)
[1;32m     89[0m [38;5;28;01melif[39;00m [38;5;28mhasattr[39m(v, [38;5;124m"[39m[38;5;124m__iter__[39m[38;5;124m"[39m):  [38;5;66;03m# lists, tuples etc[39;00m
[1;32m     90[0m     [38;5;28;01mreturn[39;00m v  [38;5;66;03m# no need to cache[39;00m

File [0;32m~/miniforge3/envs/advnetsci/lib/python3.11/site-packages/igraph/drawing/colors.py:517[0m, in [0;36mcolor_name_to_rgba[0;34m(color, palette)[0m
[1;32m    515[0m                 components [38;5;241m=[39m hsla_to_rgba([38;5;241m*[39mcomponents)
[1;32m    516[0m         [38;5;28;01melse[39;00m:
[0;32m--> 517[0m             components [38;5;241m=[39m palette[38;5;241m.[39mget([38;5;28mint[39m(color))
[1;32m    519[0m [38;5;66;03m# At this point, the components are floats[39;00m
[1;32m    520[0m [38;5;28;01mreturn[39;00m [38;5;28mtuple[39m(clamp(val, [38;5;241m0.0[39m, [38;5;241m1.0[39m) [38;5;28;01mfor[39;00m val [38;5;129;01min[39;00m components)

[0;31mAttributeError[0m: 'NoneType' object has no attribute 'get'

